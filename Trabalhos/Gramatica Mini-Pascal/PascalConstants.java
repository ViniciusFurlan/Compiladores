/* Generated By:JavaCC: Do not edit this line. PascalConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PascalConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 5;
  /** RegularExpression Id. */
  int INTEIRO = 6;
  /** RegularExpression Id. */
  int REAL = 7;
  /** RegularExpression Id. */
  int VAR = 8;
  /** RegularExpression Id. */
  int OF = 9;
  /** RegularExpression Id. */
  int FUNCTION = 10;
  /** RegularExpression Id. */
  int PROCEDURE = 11;
  /** RegularExpression Id. */
  int LBRACE = 12;
  /** RegularExpression Id. */
  int RBRACE = 13;
  /** RegularExpression Id. */
  int SEMI = 14;
  /** RegularExpression Id. */
  int COLON = 15;
  /** RegularExpression Id. */
  int ARRAY = 16;
  /** RegularExpression Id. */
  int LBRACKET = 17;
  /** RegularExpression Id. */
  int RBRACKET = 18;
  /** RegularExpression Id. */
  int PERIOD = 19;
  /** RegularExpression Id. */
  int BEGIN = 20;
  /** RegularExpression Id. */
  int END = 21;
  /** RegularExpression Id. */
  int ATRIB = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int THEN = 24;
  /** RegularExpression Id. */
  int ELSE = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int DO = 27;
  /** RegularExpression Id. */
  int COMMA = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int ID = 30;
  /** RegularExpression Id. */
  int DIGITO = 31;
  /** RegularExpression Id. */
  int DIGITOS = 32;
  /** RegularExpression Id. */
  int FRAC_OP = 33;
  /** RegularExpression Id. */
  int EXP_OP = 34;
  /** RegularExpression Id. */
  int SINAL = 35;
  /** RegularExpression Id. */
  int OPERADOR_MULTIPLICATIVO = 36;
  /** RegularExpression Id. */
  int OPERADOR_ADITIVO = 37;
  /** RegularExpression Id. */
  int NUM = 38;
  /** RegularExpression Id. */
  int OPERADOR_RELACIONAL = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"program\"",
    "\"integer\"",
    "\"real\"",
    "\"var\"",
    "\"of\"",
    "\"function\"",
    "\"procedure\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":\"",
    "\"array\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"begin\"",
    "\"end\"",
    "\":=\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"comma\"",
    "\"not\"",
    "<ID>",
    "<DIGITO>",
    "<DIGITOS>",
    "<FRAC_OP>",
    "<EXP_OP>",
    "<SINAL>",
    "<OPERADOR_MULTIPLICATIVO>",
    "<OPERADOR_ADITIVO>",
    "<NUM>",
    "<OPERADOR_RELACIONAL>",
    "\",\"",
  };

}
